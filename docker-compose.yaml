version: '3.9'
services:
  registration_api:
    container_name: registration_api
    build:
      context: ./api-server
    volumes:
      - ./api-server:/app
    ports:
      - 8080:8080
      - 8083:8083 # テスト用のポート
    depends_on:
      - db
    tty: true # コンテナの永続化
    environment:
      - TZ=Asia/Tokyo
    entrypoint: air -c .air.registration.toml

  business_api:
    container_name: business_api
    build:
      context: ./api-server
    volumes:
      - ./api-server:/app
    ports:
      - 8081:8081
      - 8084:8084 # テスト用のポート
    depends_on:
      - db
    tty: true # コンテナの永続化
    environment:
      - TZ=Asia/Tokyo
    entrypoint: air -c .air.business.toml

  admin_api:
    container_name: admin_api
    build:
      context: ./api_server/admin
    volumes:
      - ./api_server/admin:/app
    ports:
      - 8082:8082
    depends_on:
      - db
    tty: true # コンテナの永続化
    environment:
      - TZ=Asia/Tokyo

  migrations:
    container_name: migrations
    build:
      context: ./migrations
    volumes:
      - ./migrations:/app
    depends_on:
      - db
    tty: true # コンテナの永続化
    environment:
      - TZ=Asia/Tokyo

  db:
    image: mysql:8.0.28
    container_name: db
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: it_support
      TZ: 'Asia/Tokyo'
    volumes:
      - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql:/var/lib/mysql

  gcs:
    image: fsouza/fake-gcs-server
    tty: true
    ports:
      - 4443:4443
    volumes:
      - ./.data:/data/it_support_dev
      - ./.storage:/storage
    command: -scheme http -public-host ${URL:-localhost}:4443 -external-url http://${URL:-gcs}:4443 -port-http 8000

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - 3000:3000
      - 3001:3001
      - 3002:3002
      - 3100:3100 # Registrationテスト用のポート
      - 3102:3102 # Businessテスト用のポート
    volumes:
      - ./frontend:/app
      - ./api_server/registration/api/:/app/it-support/openapi/registration
      - ./api_server/business/api/:/app/it-support/openapi/business
    restart: always
    tty: true
    stdin_open: true
    command: 'bash entrypoint.sh'
