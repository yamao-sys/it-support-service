/* tslint:disable */
/* eslint-disable */
/**
 * Business Service
 * business APIs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ProjectValidationError
 */
export interface ProjectValidationError {
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  title?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  description?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  startDate?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  endDate?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  minBudget?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  maxBudget?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ProjectValidationError
   */
  isActive?: Array<string>;
}

/**
 * Check if a given object implements the ProjectValidationError interface.
 */
export function instanceOfProjectValidationError(value: object): value is ProjectValidationError {
  return true;
}

export function ProjectValidationErrorFromJSON(json: any): ProjectValidationError {
  return ProjectValidationErrorFromJSONTyped(json, false);
}

export function ProjectValidationErrorFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ProjectValidationError {
  if (json == null) {
    return json;
  }
  return {
    title: json["title"] == null ? undefined : json["title"],
    description: json["description"] == null ? undefined : json["description"],
    startDate: json["startDate"] == null ? undefined : json["startDate"],
    endDate: json["endDate"] == null ? undefined : json["endDate"],
    minBudget: json["minBudget"] == null ? undefined : json["minBudget"],
    maxBudget: json["maxBudget"] == null ? undefined : json["maxBudget"],
    isActive: json["isActive"] == null ? undefined : json["isActive"],
  };
}

export function ProjectValidationErrorToJSON(json: any): ProjectValidationError {
  return ProjectValidationErrorToJSONTyped(json, false);
}

export function ProjectValidationErrorToJSONTyped(
  value?: ProjectValidationError | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    title: value["title"],
    description: value["description"],
    startDate: value["startDate"],
    endDate: value["endDate"],
    minBudget: value["minBudget"],
    maxBudget: value["maxBudget"],
    isActive: value["isActive"],
  };
}
