/* tslint:disable */
/* eslint-disable */
/**
 * Business Service
 * business APIs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Project
 */
export interface Project {
  /**
   *
   * @type {number}
   * @memberof Project
   */
  id: number;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  description: string;
  /**
   *
   * @type {Date}
   * @memberof Project
   */
  startDate: Date;
  /**
   *
   * @type {Date}
   * @memberof Project
   */
  endDate: Date;
  /**
   *
   * @type {number}
   * @memberof Project
   */
  minBudget?: number;
  /**
   *
   * @type {number}
   * @memberof Project
   */
  maxBudget?: number;
  /**
   *
   * @type {boolean}
   * @memberof Project
   */
  isActive: boolean;
  /**
   *
   * @type {Date}
   * @memberof Project
   */
  createdAt: Date;
}

/**
 * Check if a given object implements the Project interface.
 */
export function instanceOfProject(value: object): value is Project {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined) return false;
  if (!("startDate" in value) || value["startDate"] === undefined) return false;
  if (!("endDate" in value) || value["endDate"] === undefined) return false;
  if (!("isActive" in value) || value["isActive"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  return true;
}

export function ProjectFromJSON(json: any): Project {
  return ProjectFromJSONTyped(json, false);
}

export function ProjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): Project {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    title: json["title"],
    description: json["description"],
    startDate: new Date(json["startDate"]),
    endDate: new Date(json["endDate"]),
    minBudget: json["minBudget"] == null ? undefined : json["minBudget"],
    maxBudget: json["maxBudget"] == null ? undefined : json["maxBudget"],
    isActive: json["isActive"],
    createdAt: new Date(json["createdAt"]),
  };
}

export function ProjectToJSON(json: any): Project {
  return ProjectToJSONTyped(json, false);
}

export function ProjectToJSONTyped(
  value?: Project | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    title: value["title"],
    description: value["description"],
    startDate: value["startDate"].toISOString().substring(0, 10),
    endDate: value["endDate"].toISOString().substring(0, 10),
    minBudget: value["minBudget"],
    maxBudget: value["maxBudget"],
    isActive: value["isActive"],
    createdAt: value["createdAt"].toISOString(),
  };
}
