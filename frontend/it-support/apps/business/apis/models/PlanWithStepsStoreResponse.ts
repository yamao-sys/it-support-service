/* tslint:disable */
/* eslint-disable */
/**
 * Business Service
 * business APIs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { PlanWithStepsValidationError } from "./PlanWithStepsValidationError";
import {
  PlanWithStepsValidationErrorFromJSON,
  PlanWithStepsValidationErrorFromJSONTyped,
  PlanWithStepsValidationErrorToJSON,
  PlanWithStepsValidationErrorToJSONTyped,
} from "./PlanWithStepsValidationError";
import type { Plan } from "./Plan";
import { PlanFromJSON, PlanFromJSONTyped, PlanToJSON, PlanToJSONTyped } from "./Plan";

/**
 *
 * @export
 * @interface PlanWithStepsStoreResponse
 */
export interface PlanWithStepsStoreResponse {
  /**
   *
   * @type {Plan}
   * @memberof PlanWithStepsStoreResponse
   */
  plan: Plan;
  /**
   *
   * @type {PlanWithStepsValidationError}
   * @memberof PlanWithStepsStoreResponse
   */
  errors: PlanWithStepsValidationError;
}

/**
 * Check if a given object implements the PlanWithStepsStoreResponse interface.
 */
export function instanceOfPlanWithStepsStoreResponse(
  value: object,
): value is PlanWithStepsStoreResponse {
  if (!("plan" in value) || value["plan"] === undefined) return false;
  if (!("errors" in value) || value["errors"] === undefined) return false;
  return true;
}

export function PlanWithStepsStoreResponseFromJSON(json: any): PlanWithStepsStoreResponse {
  return PlanWithStepsStoreResponseFromJSONTyped(json, false);
}

export function PlanWithStepsStoreResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PlanWithStepsStoreResponse {
  if (json == null) {
    return json;
  }
  return {
    plan: PlanFromJSON(json["plan"]),
    errors: PlanWithStepsValidationErrorFromJSON(json["errors"]),
  };
}

export function PlanWithStepsStoreResponseToJSON(json: any): PlanWithStepsStoreResponse {
  return PlanWithStepsStoreResponseToJSONTyped(json, false);
}

export function PlanWithStepsStoreResponseToJSONTyped(
  value?: PlanWithStepsStoreResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    plan: PlanToJSON(value["plan"]),
    errors: PlanWithStepsValidationErrorToJSON(value["errors"]),
  };
}
