/* tslint:disable */
/* eslint-disable */
/**
 * Business Service
 * business APIs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { SupporterSignInBadRequestResponse, SupporterSignInInput } from "../models/index";
import {
  SupporterSignInBadRequestResponseFromJSON,
  SupporterSignInBadRequestResponseToJSON,
  SupporterSignInInputFromJSON,
  SupporterSignInInputToJSON,
} from "../models/index";

export interface PostSupporterSignInRequest {
  supporterSignInInput: SupporterSignInInput;
}

/**
 *
 */
export class SupportersApi extends runtime.BaseAPI {
  /**
   * Supporter Sign In
   */
  async postSupporterSignInRaw(
    requestParameters: PostSupporterSignInRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<object>> {
    if (requestParameters["supporterSignInInput"] == null) {
      throw new runtime.RequiredError(
        "supporterSignInInput",
        'Required parameter "supporterSignInInput" was null or undefined when calling postSupporterSignIn().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/supporters/sign-in`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: SupporterSignInInputToJSON(requestParameters["supporterSignInInput"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse<any>(response);
  }

  /**
   * Supporter Sign In
   */
  async postSupporterSignIn(
    requestParameters: PostSupporterSignInRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<object> {
    const response = await this.postSupporterSignInRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
