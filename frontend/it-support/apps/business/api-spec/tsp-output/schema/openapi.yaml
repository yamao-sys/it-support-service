openapi: 3.1.0
info:
  title: Business Service
  version: '1.0'
  description: business APIs
tags:
  - name: companies
  - name: csrf
  - name: supporters
  - name: projects
  - name: plans
paths:
  /companies/sign-in:
    post:
      operationId: post-companies-sign-in
      summary: Company Sign In
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          headers:
            Set-Cookie:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySignInOkResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanySignInBadRequestResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanySignInInput'
  /csrf:
    get:
      operationId: get-csrf
      summary: Get Csrf
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsrfResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - csrf
  /plans:
    post:
      operationId: post-plans
      summary: Create Plan
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanStoreResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - plans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanStoreInput'
      security:
        - ApiKeyAuth: []
  /projects:
    get:
      operationId: get-projects
      summary: Create Project
      parameters:
        - name: pageToken
          in: query
          required: false
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsListResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - projects
      security:
        - ApiKeyAuth: []
    post:
      operationId: post-projects
      summary: Create Project
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStoreResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStoreInput'
      security:
        - ApiKeyAuth: []
  /projects/{id}:
    get:
      operationId: get-project
      summary: Get Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - projects
      security:
        - ApiKeyAuth: []
    put:
      operationId: put-project
      summary: Update Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectStoreResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectStoreInput'
      security:
        - ApiKeyAuth: []
  /supporters/sign-in:
    post:
      operationId: post-supporters-sign-in
      summary: Supporter Sign In
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          headers:
            Set-Cookie:
              required: true
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupporterSignInOkResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupporterSignInBadRequestResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                required:
                  - code
                  - message
      tags:
        - supporters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupporterSignInInput'
components:
  schemas:
    CompanySignInBadRequestResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: string
      title: Company SignIn BadRequestError Response
    CompanySignInInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
      title: Company SignIn Input
    CompanySignInOkResponse:
      type: object
      title: Company SignIn Ok Response
    CsrfResponse:
      type: object
      required:
        - csrfToken
      properties:
        csrfToken:
          type: string
      title: CsrfResponse
    Plan:
      type: object
      required:
        - id
        - projectId
        - title
        - description
        - startDate
        - endDate
        - unitPrice
        - createdAt
      properties:
        id:
          type: integer
        projectId:
          type: integer
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        unitPrice:
          type: integer
        createdAt:
          type: string
          format: date-time
      title: Plan
    PlanStoreInput:
      type: object
      required:
        - projectId
        - title
        - description
        - startDate
        - endDate
        - unitPrice
      properties:
        projectId:
          type: integer
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        unitPrice:
          type: integer
      title: Plan Store Input
    PlanStoreResponse:
      type: object
      required:
        - plan
        - errors
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
        errors:
          $ref: '#/components/schemas/PlanValidationError'
      title: Plan Store Response
    PlanValidationError:
      type: object
      properties:
        title:
          type: array
          items:
            type: string
        description:
          type: array
          items:
            type: string
        startDate:
          type: array
          items:
            type: string
        endDate:
          type: array
          items:
            type: string
        unitPrice:
          type: array
          items:
            type: string
      title: Plan Validation Error
    Project:
      type: object
      required:
        - id
        - title
        - description
        - startDate
        - endDate
        - isActive
        - createdAt
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        minBudget:
          type: integer
        maxBudget:
          type: integer
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
      title: Project
    ProjectResponse:
      type: object
      required:
        - project
      properties:
        project:
          $ref: '#/components/schemas/Project'
      title: Project Response
    ProjectStoreInput:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        minBudget:
          type: integer
        maxBudget:
          type: integer
        isActive:
          type: boolean
      title: Project Store Input
    ProjectStoreResponse:
      type: object
      required:
        - project
        - errors
      properties:
        project:
          $ref: '#/components/schemas/Project'
        errors:
          $ref: '#/components/schemas/ProjectValidationError'
      title: Project Store Response
    ProjectValidationError:
      type: object
      properties:
        title:
          type: array
          items:
            type: string
        description:
          type: array
          items:
            type: string
        startDate:
          type: array
          items:
            type: string
        endDate:
          type: array
          items:
            type: string
        minBudget:
          type: array
          items:
            type: string
        maxBudget:
          type: array
          items:
            type: string
        isActive:
          type: array
          items:
            type: string
      title: Project Validation Error
    ProjectsListResponse:
      type: object
      required:
        - projects
        - nextPageToken
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        nextPageToken:
          type: string
      title: Projects List Response
    SupporterSignInBadRequestResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: string
      title: Supporter SignIn BadRequestError Response
    SupporterSignInInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
      title: Supporter SignIn Input
    SupporterSignInOkResponse:
      type: object
      title: Supporter SignIn Ok Response
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: cookie
      name: token
servers:
  - url: https://localhost:8081
    variables: {}
