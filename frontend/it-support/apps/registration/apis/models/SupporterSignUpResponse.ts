/* tslint:disable */
/* eslint-disable */
/**
 * Registration Service
 * registration APIs
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { SupporterSignUpValidationError } from "./SupporterSignUpValidationError";
import {
  SupporterSignUpValidationErrorFromJSON,
  SupporterSignUpValidationErrorFromJSONTyped,
  SupporterSignUpValidationErrorToJSON,
  SupporterSignUpValidationErrorToJSONTyped,
} from "./SupporterSignUpValidationError";

/**
 *
 * @export
 * @interface SupporterSignUpResponse
 */
export interface SupporterSignUpResponse {
  /**
   *
   * @type {number}
   * @memberof SupporterSignUpResponse
   */
  code: number;
  /**
   *
   * @type {SupporterSignUpValidationError}
   * @memberof SupporterSignUpResponse
   */
  errors: SupporterSignUpValidationError;
}

/**
 * Check if a given object implements the SupporterSignUpResponse interface.
 */
export function instanceOfSupporterSignUpResponse(value: object): value is SupporterSignUpResponse {
  if (!("code" in value) || value["code"] === undefined) return false;
  if (!("errors" in value) || value["errors"] === undefined) return false;
  return true;
}

export function SupporterSignUpResponseFromJSON(json: any): SupporterSignUpResponse {
  return SupporterSignUpResponseFromJSONTyped(json, false);
}

export function SupporterSignUpResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SupporterSignUpResponse {
  if (json == null) {
    return json;
  }
  return {
    code: json["code"],
    errors: SupporterSignUpValidationErrorFromJSON(json["errors"]),
  };
}

export function SupporterSignUpResponseToJSON(json: any): SupporterSignUpResponse {
  return SupporterSignUpResponseToJSONTyped(json, false);
}

export function SupporterSignUpResponseToJSONTyped(
  value?: SupporterSignUpResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    code: value["code"],
    errors: SupporterSignUpValidationErrorToJSON(value["errors"]),
  };
}
